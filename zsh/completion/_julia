#compdef julia

# zsh completions for 'julia'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
  {-v,--version}'[display version information]'
  {-h,--help}'[print this message (--help-hidden for more)]'
  '--project[{<dir>|@.}\]    Set <dir> as the home project/environment]'
  {-J,--sysimage}'[start up with the given system image file]'
  {-H,--home}'[set location of `julia` executable]'
  '--startup-file[}   Load `~/.julia/config/startup.jl`]'
  '--handle-signals[} Enable or disable Julias default signal handlers]'
  '--sysimage-native-code[}]'
  '--compiled-modules[}]'
  {-e,--eval}'[evaluate <expr>]'
  {-E,--print}'[evaluate <expr> and display the result]'
  {-L,--load}'[load <file> immediately on all processors]'
  {-p,--procs}'[}      Integer value N launches N additional local worker processes]'
  '--machine-file[run processes on hosts listed in <file>]'
  '-i[interactive mode; REPL runs and isinteractive() is true]'
  {-q,--quiet}'[quiet startup: no banner, suppress REPL warnings]'
  '--banner[}    Enable or disable startup banner]'
  '--color[}     Enable or disable color text]'
  '--history-file[}   Load or save history]'
  '--depwarn[}  Enable or disable syntax and method deprecation warnings ("error" turns warnings into errors)]'
  '--warn-overwrite[} Enable or disable method overwrite warnings]'
  {-C,--cpu-target}'[limit usage of CPU features up to <target>; set to "help" to see the available options]'
  {-O,--optimize}'[0,1,2,3}  Set the optimization level (default level is 2 if unspecified or 3 if used without a level)]'
  {-g,-g}'[enable / Set the level of debug info generation (default level is 1 if unspecified or 2 if used without a level)]'
  '--inline[}         Control whether inlining is permitted, including overriding @inline declarations]'
  '--check-bounds[}   Emit bounds checks always or never (ignoring declarations)]'
  '--math-mode[fast}   Disallow or enable unsafe floating point optimizations (overrides @fastmath declaration)]'
  '--code-coverage[}, --code-coverage]'
  '--code-coverage[.info]'
  '--track-allocation[}, --track-allocation]'
  '*:filename:_files'
)

_arguments -s $arguments
